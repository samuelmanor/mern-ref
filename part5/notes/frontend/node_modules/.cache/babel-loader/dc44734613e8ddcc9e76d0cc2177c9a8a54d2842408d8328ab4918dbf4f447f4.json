{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Note from './components/note';\nimport Notification from './components/notification';\nimport Footer from './components/footer';\nimport Togglable from './components/togglable';\nimport NoteForm from './components/noteForm';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport LoginForm from './components/loginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const noteFormRef = useRef();\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n  const handleLogin = async event => {\n    // window.localStorage.removeItem('loggedNoteappUser')\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      noteFormRef.current.toggleVisibility();\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n    ;\n  };\n  const addNote = noteObject => {\n    noteFormRef.current.toggleVisibility();\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n  const noteForm = () => {\n    /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), \" \", noteForm(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: noteFormRef,\n      children: /*#__PURE__*/_jsxDEV(NoteForm, {\n        createNote: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1C2Q0VaaBRQuvVvXk3nkNdAqhkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Note","Notification","Footer","Togglable","NoteForm","noteService","loginService","LoginForm","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","noteFormRef","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","current","toggleVisibility","exception","setTimeout","addNote","noteObject","create","returnedNote","concat","handleNoteChange","target","value","notesToShow","filter","note","important","toggleImportanceOf","id","find","n","changedNote","update","map","catch","error","content","noteForm","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","message","buttonLabel","handleUsernameChange","_ref","handlePasswordChange","_ref2","handleSubmit","name","onClick","toggleImportance","ref","createNote","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport Note from './components/note';\nimport Notification from './components/notification';\nimport Footer from './components/footer';\nimport Togglable from './components/togglable';\nimport NoteForm from './components/noteForm';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport LoginForm from './components/loginForm';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  const noteFormRef = useRef();\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => { // window.localStorage.removeItem('loggedNoteappUser')\n    event.preventDefault();\n    \n    try {\n      const user = await loginService.login({ username, password });\n\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      noteFormRef.current.toggleVisibility();\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    };\n  };\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility();\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const noteForm = () => {\n    <form onSubmit={addNote}>\n      <input\n        value={newNote}\n        onChange={handleNoteChange} />\n      <button type='submit'>save</button>\n    </form>\n  };\n\n  return (\n    <div>\n      <h1>Notes app</h1>\n      <Notification message={errorMessage} />\n\n      <Togglable buttonLabel='login'>\n        <LoginForm\n              username={username}\n              password={password}\n              handleUsernameChange={({ target }) => setUsername(target.value)}\n              handlePasswordChange={({ target }) => setPassword(target.value)}\n              handleSubmit={handleLogin} />\n      </Togglable>\n      \n      {user && <div><p>{user.name} logged in</p> {noteForm()} </div>}\n\n      <h2>Notes</h2>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div> \n      <ul>\n        <ul>\n          {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <Togglable buttonLabel='new note' ref={noteFormRef}>\n        <NoteForm\n          createNote={addNote} />\n      </Togglable>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}