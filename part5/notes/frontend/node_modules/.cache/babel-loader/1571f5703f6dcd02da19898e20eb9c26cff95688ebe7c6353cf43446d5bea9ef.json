{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/components/togglable.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, refs) => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Togglable;\nexport default Togglable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","PropTypes","jsxDEV","_jsxDEV","Togglable","_s","_c","props","refs","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","propTypes","buttonLabel","string","isRequired","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/components/togglable.js"],"sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = forwardRef((props, refs) => {\n    const [visible, setVisible] = useState(false);\n\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const showWhenVisible = { display: visible ? '' : 'none' };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    useImperativeHandle(refs, () => {\n        return {\n            toggleVisibility\n        };\n    });\n\n    Togglable.propTypes = {\n        buttonLabel: PropTypes.string.isRequired\n    };\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n});\n\nexport default Togglable;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,IAAI,KAAK;EAAAH,EAAA;EAC1C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,eAAe,GAAG;IAAEC,OAAO,EAAEH,OAAO,GAAG,MAAM,GAAG;EAAG,CAAC;EAC1D,MAAMI,eAAe,GAAG;IAAED,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAG;EAAO,CAAC;EAE1D,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAEDT,mBAAmB,CAACQ,IAAI,EAAE,MAAM;IAC5B,OAAO;MACHM;IACJ,CAAC;EACL,CAAC,CAAC;EAEFV,SAAS,CAACW,SAAS,GAAG;IAClBC,WAAW,EAAEf,SAAS,CAACgB,MAAM,CAACC;EAClC,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAKiB,KAAK,EAAET,eAAgB;MAAAQ,QAAA,eACxBhB,OAAA;QAAQkB,OAAO,EAAEP,gBAAiB;QAAAK,QAAA,EAAEZ,KAAK,CAACS;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAU;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7D,eACNtB,OAAA;MAAKiB,KAAK,EAAEP,eAAgB;MAAAM,QAAA,GACvBZ,KAAK,CAACY,QAAQ,eACfhB,OAAA;QAAQkB,OAAO,EAAEP,gBAAiB;QAAAK,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC,kCAAC;AAACC,GAAA,GA/BGtB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAE,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}