{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/components/togglable.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, refs) => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      className: \"togglableContent\",\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Togglable;\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nTogglable.displayName = 'Togglable';\nexport default Togglable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","PropTypes","jsxDEV","_jsxDEV","Togglable","_s","_c","props","refs","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","children","style","onClick","buttonLabel","fileName","_jsxFileName","lineNumber","columnNumber","className","_c2","propTypes","string","isRequired","displayName","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part5/notes/frontend/src/components/togglable.js"],"sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = forwardRef((props, refs) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className='togglableContent'>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n};\n\nTogglable.displayName = 'Togglable';\n\nexport default Togglable;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,IAAI,KAAK;EAAAH,EAAA;EAC5C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,eAAe,GAAG;IAAEC,OAAO,EAAEH,OAAO,GAAG,MAAM,GAAG;EAAG,CAAC;EAC1D,MAAMI,eAAe,GAAG;IAAED,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAG;EAAO,CAAC;EAE1D,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAEDT,mBAAmB,CAACQ,IAAI,EAAE,MAAM;IAC9B,OAAO;MACLM;IACF,CAAC;EACH,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,KAAK,EAAEL,eAAgB;MAAAI,QAAA,eAC1BZ,OAAA;QAAQc,OAAO,EAAEH,gBAAiB;QAAAC,QAAA,EAAER,KAAK,CAACW;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAU;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D,eACNnB,OAAA;MAAKa,KAAK,EAAEH,eAAgB;MAACU,SAAS,EAAC,kBAAkB;MAAAR,QAAA,GACtDR,KAAK,CAACQ,QAAQ,eACfZ,OAAA;QAAQc,OAAO,EAAEH,gBAAiB;QAAAC,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC,kCAAC;AAACE,GAAA,GA3BGpB,SAAS;AA6BfA,SAAS,CAACqB,SAAS,GAAG;EAClBP,WAAW,EAAEjB,SAAS,CAACyB,MAAM,CAACC;AAClC,CAAC;AAEDvB,SAAS,CAACwB,WAAW,GAAG,WAAW;AAEnC,eAAexB,SAAS;AAAC,IAAAE,EAAA,EAAAkB,GAAA;AAAAK,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}