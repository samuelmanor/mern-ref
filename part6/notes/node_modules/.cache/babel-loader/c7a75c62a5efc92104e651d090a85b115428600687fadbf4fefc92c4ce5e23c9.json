{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport noteService from '../services/notes';\n\n// const generateId = () => {\n//     Number((Math.random() * 1000000).toFixed(0));\n// };\n\nconst noteSlice = createSlice({\n  name: 'notes',\n  initialState: [],\n  reducers: {\n    // createNote(state, action) {\n    //     state.push(action.payload);\n    // },\n    toggleImportanceOf(state, action) {\n      const id = action.payload;\n      const toChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...toChange,\n        important: !toChange.important\n      };\n      return state.map(n => n.id !== id ? n : changedNote);\n    },\n    appendNote(state, action) {\n      state.push(action.payload);\n    },\n    setNotes(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  toggleImportanceOf,\n  appendNote,\n  setNotes\n} = noteSlice.actions;\nexport const initializeNotes = () => {\n  return async dispatch => {\n    const notes = await noteService.getAll();\n    dispatch(setNotes(notes));\n  };\n};\nexport const createNote = content => {\n  return async dispatch => {\n    const newNote = await noteService.createNew(content);\n    dispatch(appendNote(newNote));\n  };\n};\nexport default noteSlice.reducer;\n\n// const noteReducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case 'NEW_NOTE':\n//             return state.concat(action.payload);\n//         case 'TOGGLE_IMPORTANCE':\n//             const id = action.payload.id;\n//             const noteToChange = state.find(n => n.id === id);\n//             const changedNote = { ...noteToChange, important: !noteToChange.important };\n\n//             return state.map(note => note.id !== id ? note : changedNote);\n//         default:\n//             return state;\n//     };\n// };\n\n// export const createNote = (content) => {\n//     return {\n//         type: 'NEW_NOTE',\n//         payload: {\n//             content,\n//             important: false,\n//             id: generateId()\n//         }\n//     };\n// };\n\n// export const toggleImportanceOf = (id) => {\n//     return {\n//         type: 'TOGGLE_IMPORTANCE',\n//         payload: { id }\n//     };\n// };\n\n// export default noteReducer;","map":{"version":3,"names":["createSlice","noteService","noteSlice","name","initialState","reducers","toggleImportanceOf","state","action","id","payload","toChange","find","n","changedNote","important","map","appendNote","push","setNotes","actions","initializeNotes","dispatch","notes","getAll","createNote","content","newNote","createNew","reducer"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/src/reducers/noteReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport noteService from '../services/notes';\n\n// const generateId = () => {\n//     Number((Math.random() * 1000000).toFixed(0));\n// };\n\nconst noteSlice = createSlice({\n    name: 'notes',\n    initialState: [],\n    reducers: {\n        // createNote(state, action) {\n        //     state.push(action.payload);\n        // },\n        toggleImportanceOf(state, action) {\n            const id = action.payload;\n            const toChange = state.find(n => n.id === id);\n            const changedNote = { ...toChange, important: !toChange.important };\n\n            return state.map(n => n.id !== id ? n : changedNote);\n        },\n        appendNote(state, action) {\n            state.push(action.payload);\n        },\n        setNotes(state, action) {\n            return action.payload;\n        }\n    }\n});\n\nexport const { toggleImportanceOf, appendNote, setNotes } = noteSlice.actions;\n\nexport const initializeNotes = () => {\n    return async dispatch => {\n        const notes = await noteService.getAll();\n        dispatch(setNotes(notes));\n    };\n};\n\nexport const createNote = content => {\n    return async dispatch => {\n        const newNote = await noteService.createNew(content);\n        dispatch(appendNote(newNote));\n    };\n};\n\nexport default noteSlice.reducer;\n\n// const noteReducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case 'NEW_NOTE':\n//             return state.concat(action.payload);\n//         case 'TOGGLE_IMPORTANCE':\n//             const id = action.payload.id;\n//             const noteToChange = state.find(n => n.id === id);\n//             const changedNote = { ...noteToChange, important: !noteToChange.important };\n\n//             return state.map(note => note.id !== id ? note : changedNote);\n//         default:\n//             return state;\n//     };\n// };\n\n\n\n// export const createNote = (content) => {\n//     return {\n//         type: 'NEW_NOTE',\n//         payload: {\n//             content,\n//             important: false,\n//             id: generateId()\n//         }\n//     };\n// };\n\n// export const toggleImportanceOf = (id) => {\n//     return {\n//         type: 'TOGGLE_IMPORTANCE',\n//         payload: { id }\n//     };\n// };\n\n// export default noteReducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;;AAE3C;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACN;IACA;IACA;IACAC,kBAAkBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;MACzB,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAC7C,MAAMK,WAAW,GAAG;QAAE,GAAGH,QAAQ;QAAEI,SAAS,EAAE,CAACJ,QAAQ,CAACI;MAAU,CAAC;MAEnE,OAAOR,KAAK,CAACS,GAAG,CAACH,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,GAAGI,CAAC,GAAGC,WAAW,CAAC;IACxD,CAAC;IACDG,UAAUA,CAACV,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACW,IAAI,CAACV,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDS,QAAQA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACpB,OAAOA,MAAM,CAACE,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,kBAAkB;EAAEW,UAAU;EAAEE;AAAS,CAAC,GAAGjB,SAAS,CAACkB,OAAO;AAE7E,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,KAAK,GAAG,MAAMtB,WAAW,CAACuB,MAAM,EAAE;IACxCF,QAAQ,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC;AAED,OAAO,MAAME,UAAU,GAAGC,OAAO,IAAI;EACjC,OAAO,MAAMJ,QAAQ,IAAI;IACrB,MAAMK,OAAO,GAAG,MAAM1B,WAAW,CAAC2B,SAAS,CAACF,OAAO,CAAC;IACpDJ,QAAQ,CAACL,UAAU,CAACU,OAAO,CAAC,CAAC;EACjC,CAAC;AACL,CAAC;AAED,eAAezB,SAAS,CAAC2B,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}