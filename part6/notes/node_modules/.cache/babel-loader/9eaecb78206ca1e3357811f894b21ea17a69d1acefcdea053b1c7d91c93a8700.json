{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { createNote, toggleImportanceOf } from './reducers/noteReducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = () => {\n  Number((Math.random() * 1000000).toFixed(0));\n};\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n  const addNote = event => {\n    event.preventDefault();\n    // const content = event.target.note.value;\n    // event.target.note.value = ''\n    // store.dispatch({\n    //   type: 'NEW_NOTE',\n    //   payload: {\n    //     content,\n    //     important: false,\n    //     id: generateId()\n    //   }\n    // });\n  };\n\n  const toggleImportance = () => {\n    // store.dispatch({\n    //   type: 'TOGGLE_IMPORTANCE',\n    //   payload: { id }\n    // });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleImportance(note.id),\n        children: [note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? 'important' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E+izF8dZ+qIXvXLmwmZPZjv7l3I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createNote","toggleImportanceOf","useSelector","useDispatch","jsxDEV","_jsxDEV","generateId","Number","Math","random","toFixed","App","_s","dispatch","notes","state","addNote","event","preventDefault","toggleImportance","children","onSubmit","name","fileName","_jsxFileName","lineNumber","columnNumber","type","map","note","onClick","id","content","important","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/App.js"],"sourcesContent":["import { createNote, toggleImportanceOf } from './reducers/noteReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst generateId = () => {\n  Number((Math.random() * 1000000).toFixed(0));\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    // const content = event.target.note.value;\n    // event.target.note.value = ''\n    // store.dispatch({\n    //   type: 'NEW_NOTE',\n    //   payload: {\n    //     content,\n    //     important: false,\n    //     id: generateId()\n    //   }\n    // });\n  };\n\n  const toggleImportance = () => {\n    // store.dispatch({\n    //   type: 'TOGGLE_IMPORTANCE',\n    //   payload: { id }\n    // });\n  };\n\n  return(\n    <div>\n      <form onSubmit={addNote}>\n        <input name=\"note\" /> \n        <button type=\"submit\">add</button>\n      </form>\n      <ul>\n        {notes.map(note=>\n          <li key={note.id} onClick={() => toggleImportance(note.id)}>\n            {note.content} <strong>{note.important ? 'important' : ''}</strong>\n          </li>\n        )}\n        </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvBC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAAC;EAEzC,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACA;IACA;EAAA,CACD;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAMgB,QAAQ,EAAEL,OAAQ;MAAAI,QAAA,gBACtBf,OAAA;QAAOiB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrBrB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACPrB,OAAA;MAAAe,QAAA,EACGN,KAAK,CAACc,GAAG,CAACC,IAAI,iBACbxB,OAAA;QAAkByB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACU,IAAI,CAACE,EAAE,CAAE;QAAAX,QAAA,GACxDS,IAAI,CAACG,OAAO,EAAC,GAAC,eAAA3B,OAAA;UAAAe,QAAA,EAASS,IAAI,CAACI,SAAS,GAAG,WAAW,GAAG;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAU;MAAA,GAD5DG,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACd,EAAA,CAxCID,GAAG;EAAA,QACUR,WAAW,EACdD,WAAW;AAAA;AAAAgC,EAAA,GAFrBvB,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}