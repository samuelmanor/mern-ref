{"ast":null,"code":"const filterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ALL';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_FILTER':\n      return action.payload;\n    default:\n      return state;\n  }\n  ;\n};\nexport const filterChange = filter => {\n  return {\n    type: 'SET_FILTER',\n    payload: filter\n  };\n};\nexport default filterReducer;","map":{"version":3,"names":["filterReducer","state","arguments","length","undefined","action","type","payload","filterChange","filter"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/reducers/filterReducer.js"],"sourcesContent":["const filterReducer = (state = 'ALL', action) => {\n    switch (action.type) {\n        case 'SET_FILTER':\n            return action.payload\n        default:\n            return state;\n    };\n};\n\nexport const filterChange = filter => {\n    return {\n        type: 'SET_FILTER',\n        payload: filter\n    };\n};\n\nexport default filterReducer;"],"mappings":"AAAA,MAAMA,aAAa,GAAG,SAAAA,CAAA,EAA2B;EAAA,IAA1BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACb,OAAOD,MAAM,CAACE,OAAO;IACzB;MACI,OAAON,KAAK;EAAC;EACpB;AACL,CAAC;AAED,OAAO,MAAMO,YAAY,GAAGC,MAAM,IAAI;EAClC,OAAO;IACHH,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEE;EACb,CAAC;AACL,CAAC;AAED,eAAeT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}