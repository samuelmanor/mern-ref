{"ast":null,"code":"const initialState = [{\n  content: 'reducer defines how redux store works',\n  important: true,\n  id: 1\n}, {\n  content: 'state of store can contain any data',\n  important: false,\n  id: 2\n}];\nconst noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return state.concat(action.payload);\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.payload.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id !== id ? note : changedNote);\n    default:\n      return state;\n  }\n  ;\n};\nconst generateId = () => {\n  Number((Math.random() * 1000000).toFixed(0));\n};\nexport const createNote = content => {\n  return {\n    type: 'NEW_NOTE',\n    payload: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    payload: {\n      id\n    }\n  };\n};\nexport default noteReducer;","map":{"version":3,"names":["initialState","content","important","id","noteReducer","state","arguments","length","undefined","action","type","concat","payload","noteToChange","find","n","changedNote","map","note","generateId","Number","Math","random","toFixed","createNote","toggleImportanceOf"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/reducers/noteReducer.js"],"sourcesContent":["const initialState = [\n    {\n        content: 'reducer defines how redux store works',\n        important: true,\n        id: 1\n    },\n    {\n        content: 'state of store can contain any data',\n        important: false,\n        id: 2\n    }\n];\n\nconst noteReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'NEW_NOTE':\n            return state.concat(action.payload);\n        case 'TOGGLE_IMPORTANCE':\n            const id = action.payload.id;\n            const noteToChange = state.find(n => n.id === id);\n            const changedNote = { ...noteToChange, important: !noteToChange.important };\n\n            return state.map(note => note.id !== id ? note : changedNote);\n        default:\n            return state;\n    };\n};\n\nconst generateId = () => {\n    Number((Math.random() * 1000000).toFixed(0));\n};\n\n\nexport const createNote = (content) => {\n    return {\n        type: 'NEW_NOTE',\n        payload: {\n            content,\n            important: false,\n            id: generateId()\n        }\n    };\n};\n\nexport const toggleImportanceOf = (id) => {\n    return {\n        type: 'TOGGLE_IMPORTANCE',\n        payload: { id }\n    };\n};\n\nexport default noteReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CACjB;EACIC,OAAO,EAAE,uCAAuC;EAChDC,SAAS,EAAE,IAAI;EACfC,EAAE,EAAE;AACR,CAAC,EACD;EACIF,OAAO,EAAE,qCAAqC;EAC9CC,SAAS,EAAE,KAAK;EAChBC,EAAE,EAAE;AACR,CAAC,CACJ;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,UAAU;MACX,OAAOL,KAAK,CAACM,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IACvC,KAAK,mBAAmB;MACpB,MAAMT,EAAE,GAAGM,MAAM,CAACG,OAAO,CAACT,EAAE;MAC5B,MAAMU,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;MACjD,MAAMa,WAAW,GAAG;QAAE,GAAGH,YAAY;QAAEX,SAAS,EAAE,CAACW,YAAY,CAACX;MAAU,CAAC;MAE3E,OAAOG,KAAK,CAACY,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACf,EAAE,KAAKA,EAAE,GAAGe,IAAI,GAAGF,WAAW,CAAC;IACjE;MACI,OAAOX,KAAK;EAAC;EACpB;AACL,CAAC;AAED,MAAMc,UAAU,GAAGA,CAAA,KAAM;EACrBC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAIvB,OAAO,IAAK;EACnC,OAAO;IACHS,IAAI,EAAE,UAAU;IAChBE,OAAO,EAAE;MACLX,OAAO;MACPC,SAAS,EAAE,KAAK;MAChBC,EAAE,EAAEgB,UAAU;IAClB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAItB,EAAE,IAAK;EACtC,OAAO;IACHO,IAAI,EAAE,mBAAmB;IACzBE,OAAO,EAAE;MAAET;IAAG;EAClB,CAAC;AACL,CAAC;AAED,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}