{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { createNote, toggleImportanceOf } from './reducers/noteReducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = () => {\n  Number((Math.random() * 1000000).toFixed(0));\n};\nconst App = _ref => {\n  _s();\n  let {\n    store\n  } = _ref;\n  // else 'store' is undefined?\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n  const addNote = event => {\n    event.preventDefault();\n    const content = event.target.note.value;\n    event.target.note.value = '';\n    store.dispatch(createNote(content));\n  };\n  const toggleImportance = id => {\n    store.dispatch(toggleImportanceOf(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleImportance(note.id),\n        children: [note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? 'important' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 28\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E+izF8dZ+qIXvXLmwmZPZjv7l3I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createNote","toggleImportanceOf","useSelector","useDispatch","jsxDEV","_jsxDEV","generateId","Number","Math","random","toFixed","App","_ref","_s","store","dispatch","notes","state","addNote","event","preventDefault","content","target","note","value","toggleImportance","id","children","onSubmit","name","fileName","_jsxFileName","lineNumber","columnNumber","type","map","onClick","important","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/App.js"],"sourcesContent":["import { createNote, toggleImportanceOf } from './reducers/noteReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst generateId = () => {\n  Number((Math.random() * 1000000).toFixed(0));\n};\n\nconst App = ({ store }) => { // else 'store' is undefined?\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const content = event.target.note.value;\n    event.target.note.value = ''\n    store.dispatch(createNote(content));\n  };\n\n  const toggleImportance = (id) => {\n    store.dispatch(toggleImportanceOf(id));\n  };\n\n  return(\n    <div>\n      <form onSubmit={addNote}>\n        <input name=\"note\" /> \n        <button type=\"submit\">add</button>\n      </form>\n      <ul>\n        {notes.map(note=>\n          <li key={note.id} onClick={() => toggleImportance(note.id)}>\n            {note.content} <strong>{note.important ? 'important' : ''}</strong>\n          </li>\n        )}\n        </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvBC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMC,GAAG,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAAO;EAC3B,MAAMG,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAAC;EAEzC,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK;IACvCL,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,GAAG,EAAE;IAC5BV,KAAK,CAACC,QAAQ,CAACf,UAAU,CAACqB,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,MAAMI,gBAAgB,GAAIC,EAAE,IAAK;IAC/BZ,KAAK,CAACC,QAAQ,CAACd,kBAAkB,CAACyB,EAAE,CAAC,CAAC;EACxC,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAMuB,QAAQ,EAAEV,OAAQ;MAAAS,QAAA,gBACtBtB,OAAA;QAAOwB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrB5B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACP5B,OAAA;MAAAsB,QAAA,EACGX,KAAK,CAACmB,GAAG,CAACZ,IAAI,iBACblB,OAAA;QAAkB+B,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACF,IAAI,CAACG,EAAE,CAAE;QAAAC,QAAA,GACxDJ,IAAI,CAACF,OAAO,EAAC,GAAC,eAAAhB,OAAA;UAAAsB,QAAA,EAASJ,IAAI,CAACc,SAAS,GAAG,WAAW,GAAG;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAU;MAAA,GAD5DV,IAAI,CAACG,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACpB,EAAA,CA9BIF,GAAG;EAAA,QACUR,WAAW,EACdD,WAAW;AAAA;AAAAoC,EAAA,GAFrB3B,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}