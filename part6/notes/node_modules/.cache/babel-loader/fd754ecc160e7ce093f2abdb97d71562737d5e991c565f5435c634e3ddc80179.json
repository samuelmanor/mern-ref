{"ast":null,"code":"const noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return state.concat(action.payload);\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.payload.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id !== id ? note : changedNote);\n    default:\n      return state;\n  }\n  ;\n};\nexport const createNote = content => {\n  return {\n    type: 'NEW_NOTE',\n    payload: {\n      content,\n      important: false,\n      id: 0\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    payload: {\n      id\n    }\n  };\n};\nexport default noteReducer;","map":{"version":3,"names":["noteReducer","state","arguments","length","undefined","action","type","concat","payload","id","noteToChange","find","n","changedNote","important","map","note","createNote","content","toggleImportanceOf"],"sources":["/Users/smanor/Development/code/personal/mern-ref/part6/notes/frontend/src/reducers/noteReducer.js"],"sourcesContent":["const noteReducer = (state = [], action) => {\n    switch(action.type) {\n        case 'NEW_NOTE':\n            return state.concat(action.payload);\n        case 'TOGGLE_IMPORTANCE':\n            const id = action.payload.id;\n            const noteToChange = state.find(n => n.id === id);\n            const changedNote = { ...noteToChange, important: !noteToChange.important };\n\n            return state.map(note => note.id !== id ? note : changedNote);\n        default:\n            return state;\n    };\n};\n\n\nexport const createNote = (content) => {\n    return {\n        type: 'NEW_NOTE',\n        payload: {\n            content,\n            important: false,\n            id: 0\n        }\n    };\n};\n\nexport const toggleImportanceOf = (id) => {\n    return {\n        type: 'TOGGLE_IMPORTANCE',\n        payload: { id }\n    };\n};\n\nexport default noteReducer;"],"mappings":"AAAA,MAAMA,WAAW,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnC,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,UAAU;MACX,OAAOL,KAAK,CAACM,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IACvC,KAAK,mBAAmB;MACpB,MAAMC,EAAE,GAAGJ,MAAM,CAACG,OAAO,CAACC,EAAE;MAC5B,MAAMC,YAAY,GAAGT,KAAK,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MACjD,MAAMI,WAAW,GAAG;QAAE,GAAGH,YAAY;QAAEI,SAAS,EAAE,CAACJ,YAAY,CAACI;MAAU,CAAC;MAE3E,OAAOb,KAAK,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAGO,IAAI,GAAGH,WAAW,CAAC;IACjE;MACI,OAAOZ,KAAK;EAAC;EACpB;AACL,CAAC;AAGD,OAAO,MAAMgB,UAAU,GAAIC,OAAO,IAAK;EACnC,OAAO;IACHZ,IAAI,EAAE,UAAU;IAChBE,OAAO,EAAE;MACLU,OAAO;MACPJ,SAAS,EAAE,KAAK;MAChBL,EAAE,EAAE;IACR;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAIV,EAAE,IAAK;EACtC,OAAO;IACHH,IAAI,EAAE,mBAAmB;IACzBE,OAAO,EAAE;MAAEC;IAAG;EAClB,CAAC;AACL,CAAC;AAED,eAAeT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}